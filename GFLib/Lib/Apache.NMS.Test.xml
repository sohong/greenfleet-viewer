<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Apache.NMS.Test</name>
    </assembly>
    <members>
        <member name="M:Apache.NMS.Commands.Message.Clone">
            
             <summery>
              Clone this object and return a new instance that the caller now owns.
             </summery>
            
        </member>
        <member name="M:Apache.NMS.Commands.Message.ToString">
            
             <summery>
              Returns a string containing the information for this DataStructure
              such as its type and value of its elements.
             </summery>
            
        </member>
        <member name="P:Apache.NMS.Commands.Message.NMSCorrelationID">
            <summary>
            The correlation ID used to correlate messages with conversations or long running business processes
            </summary>
        </member>
        <member name="P:Apache.NMS.Commands.Message.NMSDestination">
            <summary>
            The destination of the message
            </summary>
        </member>
        <member name="P:Apache.NMS.Commands.Message.NMSTimeToLive">
            <summary>
            The time in milliseconds that this message should expire in
            </summary>
        </member>
        <member name="P:Apache.NMS.Commands.Message.NMSTimestamp">
            <summary>
            The timestamp the broker added to the message
            </summary>
        </member>
        <member name="P:Apache.NMS.Commands.Message.NMSMessageId">
            <summary>
            The message ID which is set by the provider
            </summary>
        </member>
        <member name="P:Apache.NMS.Commands.Message.NMSDeliveryMode">
            <summary>
            Whether or not this message is persistent
            </summary>
        </member>
        <member name="P:Apache.NMS.Commands.Message.NMSPriority">
            <summary>
            The Priority on this message
            </summary>
        </member>
        <member name="P:Apache.NMS.Commands.Message.NMSRedelivered">
            <summary>
            Returns true if this message has been redelivered to this or another consumer before being acknowledged successfully.
            </summary>
        </member>
        <member name="P:Apache.NMS.Commands.Message.NMSReplyTo">
            <summary>
            The destination that the consumer of this message should send replies to
            </summary>
        </member>
        <member name="P:Apache.NMS.Commands.Message.NMSType">
            <summary>
            The type name of this message
            </summary>
        </member>
        <member name="P:Apache.NMS.Commands.Message.NMSXDeliveryCount">
            <summary>
            Returns the number of times this message has been redelivered to other consumers without being acknowledged successfully.
            </summary>
        </member>
        <member name="P:Apache.NMS.Commands.Message.NMSXGroupID">
            <summary>
            The Message Group ID used to group messages together to the same consumer for the same group ID value
            </summary>
        </member>
        <member name="P:Apache.NMS.Commands.Message.NMSXGroupSeq">
            <summary>
            The Message Group Sequence counter to indicate the position in a group
            </summary>
        </member>
        <member name="P:Apache.NMS.Commands.Message.NMSXProducerTXID">
            <summary>
            Returns the ID of the producers transaction
            </summary>
        </member>
        <member name="T:Apache.NMS.Commands.Destination">
            <summary>
            Summary description for Destination.
            </summary>
        </member>
        <member name="F:Apache.NMS.Commands.Destination.TOPIC">
            <summary>
            Topic Destination object
            </summary>
        </member>
        <member name="F:Apache.NMS.Commands.Destination.TEMPORARY_TOPIC">
            <summary>
            Temporary Topic Destination object
            </summary>
        </member>
        <member name="F:Apache.NMS.Commands.Destination.QUEUE">
            <summary>
            Queue Destination object
            </summary>
        </member>
        <member name="F:Apache.NMS.Commands.Destination.TEMPORARY_QUEUE">
            <summary>
            Temporary Queue Destination object
            </summary>
        </member>
        <member name="M:Apache.NMS.Commands.Destination.#ctor">
            <summary>
            The Default Constructor
            </summary>
        </member>
        <member name="M:Apache.NMS.Commands.Destination.#ctor(System.String)">
            <summary>
            Construct the Destination with a defined physical name;
            </summary>
            <param name="name"></param>
        </member>
        <member name="M:Apache.NMS.Commands.Destination.Transform(Apache.NMS.IDestination)">
            <summary>
            </summary>
            <param name="destination"></param>
            <returns></returns>
        </member>
        <member name="M:Apache.NMS.Commands.Destination.CreateDestination(System.Int32,System.String)">
            <summary>
            Create a Destination
            </summary>
            <param name="type"></param>
            <param name="pyhsicalName"></param>
            <returns></returns>
        </member>
        <member name="M:Apache.NMS.Commands.Destination.CreateTemporaryName(System.String)">
            <summary>
            Create a temporary name from the clientId
            </summary>
            <param name="clientId"></param>
            <returns></returns>
        </member>
        <member name="M:Apache.NMS.Commands.Destination.GetClientId(Apache.NMS.Commands.Destination)">
            <summary>
            From a temporary destination find the clientId of the Connection that created it
            </summary>
            <param name="destination"></param>
            <returns>the clientId or null if not a temporary destination</returns>
        </member>
        <member name="M:Apache.NMS.Commands.Destination.CompareTo(System.Object)">
            <summary>
            </summary>
            <param name="o">object to compare</param>
            <returns>1 if this is less than o else 0 if they are equal or -1 if this is less than o</returns>
        </member>
        <member name="M:Apache.NMS.Commands.Destination.CompareTo(Apache.NMS.Commands.Destination)">
            <summary>
            Lets sort by name first then lets sort topics greater than queues
            </summary>
            <param name="that">another destination to compare against</param>
            <returns>1 if this is less than o else 0 if they are equal or -1 if this is less than o</returns>
        </member>
        <member name="M:Apache.NMS.Commands.Destination.GetDestinationType">
            <summary>
            </summary>
            <returns>Returns the Destination type</returns>
        </member>
        <member name="M:Apache.NMS.Commands.Destination.ToString">
            <summary>
            </summary>
            <returns>string representation of this instance</returns>
        </member>
        <member name="M:Apache.NMS.Commands.Destination.GetHashCode">
            <summary>
            </summary>
            <returns>hashCode for this instance</returns>
        </member>
        <member name="M:Apache.NMS.Commands.Destination.Equals(System.Object)">
            <summary>
            if the object passed in is equivalent, return true
            </summary>
            <param name="obj">the object to compare</param>
            <returns>true if this instance and obj are equivalent</returns>
        </member>
        <member name="M:Apache.NMS.Commands.Destination.CreateDestination(System.String)">
            <summary>
            Factory method to create a child destination if this destination is a composite
            </summary>
            <param name="name"></param>
            <returns>the created Destination</returns>
        </member>
        <member name="P:Apache.NMS.Commands.Destination.Options">
            <summary>
            Dictionary of name/value pairs representing option values specified
            in the URI used to create this Destination.  A null value is returned
            if no options were specified.
            </summary>
        </member>
        <member name="T:Apache.NMS.Commands.Queue">
            <summary>
            Summary description for Queue.
            </summary>
        </member>
        <member name="M:Apache.NMS.Commands.TempDestination.CreateDestination(System.String)">
            <summary>
            Method CreateDestination
            </summary>
            <returns>An Destination</returns>
            <param name="name">A  String</param>
        </member>
        <member name="T:Apache.NMS.Commands.TempQueue">
            <summary>
            A Temporary Queue
            </summary>
        </member>
        <member name="T:Apache.NMS.Commands.TempTopic">
            <summary>
            A Temporary Topic
            </summary>
        </member>
        <member name="T:Apache.NMS.Commands.Topic">
            <summary>
            Summary description for Topic.
            </summary>
        </member>
        <member name="T:Apache.NMS.Test.NMSTestSupport">
            <summary>
            useful base class for test cases
            </summary>
        </member>
        <member name="M:Apache.NMS.Test.NMSTestSupport.GetConnectionConfigFileName">
            <summary>
            Name of the connection configuration filename.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Apache.NMS.Test.NMSTestSupport.GetNameTestURI">
            <summary>
            The name of the connection configuration that CreateNMSFactory() will load.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Apache.NMS.Test.NMSTestSupport.CreateNMSFactory">
            <summary>
            Create the NMS Factory that can create NMS Connections.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Apache.NMS.Test.NMSTestSupport.GetConfiguredConnectionURI">
            <summary>
            Return the configured URI String.  This function loads the connection
            settings from the configuration file.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Apache.NMS.Test.NMSTestSupport.CreateNMSFactory(System.String)">
            <summary>
            Create the NMS Factory that can create NMS Connections.  This function loads the
            connection settings from the configuration file.
            </summary>
            <param name="nameTestURI">The named connection configuration.</param>
            <returns></returns>
        </member>
        <member name="M:Apache.NMS.Test.NMSTestSupport.GetFactoryParams(System.Xml.XmlElement)">
            <summary>
            Get the parameters for the ConnectionFactory from the configuration file.
            </summary>
            <param name="uriNode">Parent node of the factoryParams node.</param>
            <returns>Object array of parameter objects to be passsed to provider factory object.  Null if no parameters are specified in configuration file.</returns>
        </member>
        <member name="M:Apache.NMS.Test.NMSTestSupport.GetNodeValueAttribute(System.Xml.XmlElement,System.String,System.String)">
             <summary>
            
             </summary>
             <param name="parentNode"></param>
             <param name="nodeName"></param>
             <param name="dflt"></param>
             <returns></returns>
        </member>
        <member name="M:Apache.NMS.Test.NMSTestSupport.ReplaceEnvVar(System.String)">
            <summary>
            Replace embedded variable markups with environment variable values.
            Variable markups are of the following form:
            	${varname}
            </summary>
            <param name="srcText"></param>
            <returns></returns>
        </member>
        <member name="M:Apache.NMS.Test.NMSTestSupport.ReplaceEnvVar(System.String,System.String,System.String)">
            <summary>
            Replace the variable with environment variable.
            </summary>
            <param name="srcText"></param>
            <param name="varName"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:Apache.NMS.Test.NMSTestSupport.GetEnvVar(System.String,System.String)">
            <summary>
            Get environment variable value.
            </summary>
            <param name="varName"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:Apache.NMS.Test.NMSTestSupport.CreateConnection">
            <summary>
            Create a new connection to the broker.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Apache.NMS.Test.NMSTestSupport.CreateConnection(System.String)">
            <summary>
            Create a new connection to the broker.
            </summary>
            <param name="newClientId">Client ID of the new connection.</param>
            <returns></returns>
        </member>
        <member name="M:Apache.NMS.Test.NMSTestSupport.CreateDestination(Apache.NMS.ISession,System.String)">
            <summary>
            Create a destination.  This will delete an existing destination and re-create it.
            </summary>
            <param name="session"></param>
            <param name="destinationName"></param>
            <returns></returns>
        </member>
        <member name="M:Apache.NMS.Test.NMSTestSupport.RegisterDurableConsumer(System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Register a durable consumer
            </summary>
            <param name="connectionID">Connection ID of the consumer.</param>
            <param name="destination">Destination name to register.  Supports embedded prefix names.</param>
            <param name="consumerID">Name of the durable consumer.</param>
            <param name="selector">Selector parameters for consumer.</param>
            <param name="noLocal"></param>
        </member>
        <member name="M:Apache.NMS.Test.NMSTestSupport.UnregisterDurableConsumer(System.String,System.String)">
            <summary>
            Unregister a durable consumer for the given connection ID.
            </summary>
            <param name="connectionID">Connection ID of the consumer.</param>
            <param name="consumerID">Name of the durable consumer.</param>
        </member>
        <member name="P:Apache.NMS.Test.NMSTestSupport.Factory">
            <summary>
            The connection factory interface property.
            </summary>
        </member>
        <member name="M:Apache.NMS.Test.BytesMessageTest.AssertBytesMessageEqual(Apache.NMS.IMessage,Apache.NMS.IMessage)">
            <summary>
            Assert that two messages are IBytesMessages and their contents are equal.
            </summary>
            <param name="expected"></param>
            <param name="actual"></param>
        </member>
        <member name="M:Apache.NMS.Test.ConnectionTest.TwoConnections">
            <summary>
            Verify that it is possible to create multiple connections to the broker.
            There was a bug in the connection factory which set the clientId member which made
            it impossible to create an additional connection.
            </summary>
        </member>
        <member name="M:Apache.NMS.Test.ConnectionTest.TestStoppedConsumerHoldsMessagesTillStarted">
            <summary>
            Tests if the consumer receives the messages that were sent before the
            connection was started. 
            </summary>
        </member>
        <member name="M:Apache.NMS.Test.ConnectionTest.TestMultipleConnectionStops">
            <summary>
            Tests if the consumer is able to receive messages eveb when the
            connecction restarts multiple times.
            </summary>
        </member>
        <member name="M:Apache.NMS.Test.MessageSelectorTest.FilterIgnoredMessagesSlowConsumerTest(System.String)">
            <summary>
            A slow consumer will trigger the producer flow control on the broker when the destination is
            a queue.  It will also trigger the consumer flow control by slowing down the feed to all of the
            consumers on the queue to only send messages as fast as the slowest consumer can run.
            When sending to a topic, the producer will not be slowed down, and consumers will be allowed
            to run as fast as they can go.
            Since this test can take a long time to run, it is marked as explicit.
            </summary>
            <param name="destinationName"></param>
        </member>
        <member name="M:Apache.NMS.Test.TextMessageTest.AssertTextMessageEqual(Apache.NMS.IMessage,Apache.NMS.IMessage)">
            <summary>
            Assert that two messages are ITextMessages and their text bodies are equal.
            </summary>
            <param name="expected"></param>
            <param name="actual"></param>
        </member>
        <member name="M:Apache.NMS.Test.TransactionTest.AssertTextMessageEqual(Apache.NMS.IMessage,Apache.NMS.IMessage,System.String)">
            <summary>
            Assert that two messages are ITextMessages and their text bodies are equal.
            </summary>
            <param name="expected"></param>
            <param name="actual"></param>
            <param name="message"></param>
        </member>
    </members>
</doc>
